plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.9.22"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.9.22"
    id 'io.quarkus'
    id "org.jetbrains.kotlin.plugin.noarg" version "1.9.22"
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform('io.quarkus.platform:quarkus-bom:3.6.4')
    implementation 'io.quarkus:quarkus-grpc'
    implementation 'io.quarkus:quarkus-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-mongodb-panache'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation("org.mockito:mockito-core:5.0.0") // For mockito
    testImplementation("org.mockito:mockito-inline:5.0.0") // For inline mocking
    testImplementation("org.mockito.kotlin:mockito-kotlin:5.0.0") // For Kotlin-specific extensions
    implementation 'io.quarkus:quarkus-mutiny:3.0.0'
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-resteasy-mutiny'
    implementation 'io.quarkus:quarkus-resteasy-jackson'
}

group 'si.um.kotnik.flashcard'
version '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

allOpen {
    annotation("jakarta.ws.rs.Path")
    annotation("jakarta.enterprise.context.ApplicationScoped")
    annotation("jakarta.persistence.Entity")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_21
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_21
}

noArg {
    annotation("si.um.kotnik.domain.entities")
    invokeInitializers = true  // Important for proper initialization
}

